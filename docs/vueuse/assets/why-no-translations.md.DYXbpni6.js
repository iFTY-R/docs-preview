import{_ as e}from"./chunks/plugin-vue_export-helper.DlAUqK2U.js";import{i as r,o as t,Y as s}from"./chunks/vue.CKrRORKQ.js";const u=JSON.parse('{"title":"为什么 VueUse 没有翻译？","description":"","frontmatter":{},"headers":[],"relativePath":"why-no-translations.md","filePath":"why-no-translations.md"}'),n={name:"why-no-translations.md"};function o(i,a,l,h,p,d){return t(),r("div",null,a[0]||(a[0]=[s('<h1 id="为什么-vueuse-没有翻译" tabindex="-1">为什么 VueUse 没有翻译？ <a class="header-anchor" href="#为什么-vueuse-没有翻译" aria-label="Permalink to “为什么 VueUse 没有翻译？”">​</a></h1><p>VueUse 的文档没有翻译，并且<strong>我们在不久的将来不计划正式维护任何翻译</strong>。</p><p>以下是我们做出这个决定的几个考虑因素：</p><h2 id="重复和分歧" tabindex="-1">重复和分歧 <a class="header-anchor" href="#重复和分歧" aria-label="Permalink to “重复和分歧”">​</a></h2><p>文档翻译的一个众所周知的问题是很难保持更新。进行新的翻译意味着我们要复制现有的文档，这需要大量的努力来同步更改。</p><p>在 VueUse 中，我们将每个函数的代码、文档、演示和测试都放在同一个文件夹中（按函数分组而不是按类型分组）。这使得每个函数的上下文更接近且更容易阅读。然而，这也意味着如果我们想在同一个仓库中直接包含翻译，维护成本将呈指数级增长。</p><h2 id="维护责任" tabindex="-1">维护责任 <a class="header-anchor" href="#维护责任" aria-label="Permalink to “维护责任”">​</a></h2><p>VueUse 有很多函数。维护代码和审查 PR 已经是我们几乎无法完成的大量工作。对于贡献者来说，一开始发送 PR 添加翻译可能看起来很容易。但贡献者通常只做一次性贡献（这在开源中完全没问题！）。当英文文档更新时，原始翻译者可能并不总是在身边，保持翻译同步的责任往往落在维护者的肩上。虽然我们有一个会说不同语言的优秀团队和社区，但这并不意味着维护他人的翻译是毫不费力的。</p><h2 id="维护重点" tabindex="-1">维护重点 <a class="header-anchor" href="#维护重点" aria-label="Permalink to “维护重点”">​</a></h2><p>VueUse 是一个非营利性的开源项目。资源有限，我们希望更多地关注 VueUse 的逻辑和代码。我们正在尽最大努力使函数尽可能直观和自我解释。我们也希望更多地关注改进现有的英文文档和演示。</p><p>我们寄希望于随着时间推移改进的机器翻译，用户可以在需要时使用翻译工具轻松地用他们的语言阅读文档。</p><h2 id="社区翻译" tabindex="-1">社区翻译 <a class="header-anchor" href="#社区翻译" aria-label="Permalink to “社区翻译”">​</a></h2><p>尽管如此，我们仍然对社区翻译持开放态度。如果社区翻译维护良好且保持最新，我们很乐意链接到它们。如果您正在维护翻译，可以开启一个讨论让我们知道。谢谢！</p>',13)]))}const m=e(n,[["render",o]]);export{u as __pageData,m as default};
