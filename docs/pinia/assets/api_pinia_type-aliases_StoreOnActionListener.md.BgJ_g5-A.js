import{_ as e,c as i,o as s,a2 as a}from"./chunks/framework.DMet4H9D.js";const k=JSON.parse('{"title":"StoreOnActionListener()<Id, S, G, A>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/pinia/type-aliases/StoreOnActionListener.md","filePath":"api/pinia/type-aliases/StoreOnActionListener.md"}'),n={name:"api/pinia/type-aliases/StoreOnActionListener.md"};function r(o,t,h,l,d,p){return s(),i("div",null,t[0]||(t[0]=[a('<p><a href="./../../">@pinia/root</a> / <a href="./../">pinia</a> / StoreOnActionListener</p><h1 id="StoreOnActionListener-Id-S-G-A-" tabindex="-1">StoreOnActionListener()&lt;Id, S, G, A&gt; <a class="header-anchor" href="#StoreOnActionListener-Id-S-G-A-" aria-label="Permalink to &quot;StoreOnActionListener()\\&lt;Id, S, G, A\\&gt;&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#AB5959;">type</span><span style="--shiki-dark:#97E1F1;--shiki-dark-font-style:italic;--shiki-light:#2E8F82;--shiki-light-font-style:inherit;"> StoreOnActionListener</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">&lt;</span><span style="--shiki-dark:#FFB86C;--shiki-dark-font-style:italic;--shiki-light:#2E8F82;--shiki-light-font-style:inherit;">Id</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">,</span><span style="--shiki-dark:#FFB86C;--shiki-dark-font-style:italic;--shiki-light:#2E8F82;--shiki-light-font-style:inherit;"> S</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">,</span><span style="--shiki-dark:#FFB86C;--shiki-dark-font-style:italic;--shiki-light:#2E8F82;--shiki-light-font-style:inherit;"> G</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">,</span><span style="--shiki-dark:#FFB86C;--shiki-dark-font-style:italic;--shiki-light:#2E8F82;--shiki-light-font-style:inherit;"> A</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">&gt;</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#FFB86C;--shiki-dark-font-style:italic;--shiki-light:#B07D48;--shiki-light-font-style:inherit;">context</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">)</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;"> =&gt;</span><span style="--shiki-dark:#97E1F1;--shiki-dark-font-style:italic;--shiki-light:#2E8F82;--shiki-light-font-style:inherit;"> void</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">;</span></span></code></pre></div><p>Argument of <code>store.$onAction()</code></p><h2 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Id</strong> <em>extends</em> <code>string</code></p><p>• <strong>S</strong> <em>extends</em> <a href="./StateTree.html"><code>StateTree</code></a></p><p>• <strong>G</strong></p><p>• <strong>A</strong></p><h2 id="Parameters" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="context" tabindex="-1">context <a class="header-anchor" href="#context" aria-label="Permalink to &quot;context&quot;">​</a></h3><p><a href="./StoreOnActionListenerContext.html"><code>StoreOnActionListenerContext</code></a>&lt;<code>Id</code>, <code>S</code>, <code>G</code>, <code>object</code> <em>extends</em> <code>A</code> ? <a href="./ActionsTree.html"><code>_ActionsTree</code></a> : <code>A</code>&gt;</p><h2 id="Returns" tabindex="-1">Returns <a class="header-anchor" href="#Returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>void</code></p>',14)]))}const g=e(n,[["render",r]]);export{k as __pageData,g as default};
