import{_ as t,c as i,o as e,a2 as s}from"./chunks/framework.DMet4H9D.js";const u=JSON.parse('{"title":"_SubscriptionCallbackMutationBase","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/pinia/interfaces/SubscriptionCallbackMutationBase.md","filePath":"api/pinia/interfaces/SubscriptionCallbackMutationBase.md"}'),n={name:"api/pinia/interfaces/SubscriptionCallbackMutationBase.md"};function l(o,a,r,p,c,h){return e(),i("div",null,a[0]||(a[0]=[s('<p><a href="./../../">@pinia/root</a> / <a href="./../">pinia</a> / _SubscriptionCallbackMutationBase</p><h1 id="-SubscriptionCallbackMutationBase" tabindex="-1">_SubscriptionCallbackMutationBase <a class="header-anchor" href="#-SubscriptionCallbackMutationBase" aria-label="Permalink to &quot;\\_SubscriptionCallbackMutationBase&quot;">â€‹</a></h1><p>Base type for the context passed to a subscription callback. Internal type.</p><h2 id="Extended-by" tabindex="-1">Extended by <a class="header-anchor" href="#Extended-by" aria-label="Permalink to &quot;Extended by&quot;">â€‹</a></h2><ul><li><a href="./SubscriptionCallbackMutationDirect.html"><code>SubscriptionCallbackMutationDirect</code></a></li><li><a href="./SubscriptionCallbackMutationPatchFunction.html"><code>SubscriptionCallbackMutationPatchFunction</code></a></li><li><a href="./SubscriptionCallbackMutationPatchObject.html"><code>SubscriptionCallbackMutationPatchObject</code></a></li></ul><h2 id="Properties" tabindex="-1">Properties <a class="header-anchor" href="#Properties" aria-label="Permalink to &quot;Properties&quot;">â€‹</a></h2><h3 id="events-" tabindex="-1">events? <a class="header-anchor" href="#events-" aria-label="Permalink to &quot;events?&quot;">â€‹</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;">optional</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#59873A;"> events</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;"> DebuggerEvent</span><span style="--shiki-dark:#F286C4;--shiki-light:#AB5959;"> |</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;"> DebuggerEvent</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">[];</span></span></code></pre></div><p>ðŸ”´ DEV ONLY, DO NOT use for production code. Different mutation calls. Comes from <a href="https://vuejs.org/guide/extras/reactivity-in-depth.html#reactivity-debugging" target="_blank" rel="noreferrer">https://vuejs.org/guide/extras/reactivity-in-depth.html#reactivity-debugging</a> and allows to track mutations in devtools and plugins <strong>during development only</strong>.</p><hr><h3 id="storeId" tabindex="-1">storeId <a class="header-anchor" href="#storeId" aria-label="Permalink to &quot;storeId&quot;">â€‹</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#59873A;">storeId</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;"> string</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">;</span></span></code></pre></div><p><code>id</code> of the store doing the mutation.</p><hr><h3 id="type" tabindex="-1">type <a class="header-anchor" href="#type" aria-label="Permalink to &quot;type&quot;">â€‹</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#59873A;">type</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;"> MutationType</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">;</span></span></code></pre></div><p>Type of the mutation.</p>',17)]))}const k=t(n,[["render",l]]);export{u as __pageData,k as default};
