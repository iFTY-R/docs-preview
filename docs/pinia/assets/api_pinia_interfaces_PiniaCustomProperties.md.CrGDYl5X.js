import{_ as t,c as a,o as r,a2 as i}from"./chunks/framework.DMet4H9D.js";const P=JSON.parse('{"title":"PiniaCustomProperties<Id, S, G, A>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/pinia/interfaces/PiniaCustomProperties.md","filePath":"api/pinia/interfaces/PiniaCustomProperties.md"}'),s={name:"api/pinia/interfaces/PiniaCustomProperties.md"};function o(n,e,p,d,c,m){return r(),a("div",null,e[0]||(e[0]=[i('<p><a href="./../../">@pinia/root</a> / <a href="./../">pinia</a> / PiniaCustomProperties</p><h1 id="PiniaCustomProperties-Id-S-G-A-" tabindex="-1">PiniaCustomProperties&lt;Id, S, G, A&gt; <a class="header-anchor" href="#PiniaCustomProperties-Id-S-G-A-" aria-label="Permalink to &quot;PiniaCustomProperties\\&lt;Id, S, G, A\\&gt;&quot;">​</a></h1><p>Interface to be extended by the user when they add properties through plugins.</p><h2 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Id</strong> <em>extends</em> <code>string</code> = <code>string</code></p><p>• <strong>S</strong> <em>extends</em> <a href="./../type-aliases/StateTree.html"><code>StateTree</code></a> = <a href="./../type-aliases/StateTree.html"><code>StateTree</code></a></p><p>• <strong>G</strong> = <a href="./../type-aliases/GettersTree.html"><code>_GettersTree</code></a>&lt;<code>S</code>&gt;</p><p>• <strong>A</strong> = <a href="./../type-aliases/ActionsTree.html"><code>_ActionsTree</code></a></p>',8)]))}const h=t(s,[["render",o]]);export{P as __pageData,h as default};
