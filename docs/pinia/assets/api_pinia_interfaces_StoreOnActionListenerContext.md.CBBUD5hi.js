import{_ as s,c as i,o as e,a2 as t}from"./chunks/framework.DMet4H9D.js";const c=JSON.parse('{"title":"_StoreOnActionListenerContext<Store, ActionName, A>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/pinia/interfaces/StoreOnActionListenerContext.md","filePath":"api/pinia/interfaces/StoreOnActionListenerContext.md"}'),n={name:"api/pinia/interfaces/StoreOnActionListenerContext.md"};function r(o,a,h,l,p,d){return e(),i("div",null,a[0]||(a[0]=[t('<p><a href="./../../">@pinia/root</a> / <a href="./../">pinia</a> / _StoreOnActionListenerContext</p><h1 id="-StoreOnActionListenerContext-Store-ActionName-A-" tabindex="-1">_StoreOnActionListenerContext&lt;Store, ActionName, A&gt; <a class="header-anchor" href="#-StoreOnActionListenerContext-Store-ActionName-A-" aria-label="Permalink to &quot;\\_StoreOnActionListenerContext\\&lt;Store, ActionName, A\\&gt;&quot;">​</a></h1><p>Actual type for <a href="./../type-aliases/StoreOnActionListenerContext.html">StoreOnActionListenerContext</a>. Exists for refactoring purposes. For internal use only. For internal use <strong>only</strong></p><h2 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Store</strong></p><p>• <strong>ActionName</strong> <em>extends</em> <code>string</code></p><p>• <strong>A</strong></p><h2 id="Properties" tabindex="-1">Properties <a class="header-anchor" href="#Properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="after-" tabindex="-1">after() <a class="header-anchor" href="#after-" aria-label="Permalink to &quot;after()&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#59873A;">after</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#FFB86C;--shiki-dark-font-style:italic;--shiki-light:#B07D48;--shiki-light-font-style:inherit;">callback</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">)</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;"> =&gt;</span><span style="--shiki-dark:#F286C4;--shiki-light:#AB5959;"> void</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">;</span></span></code></pre></div><p>Sets up a hook once the action is finished. It receives the return value of the action, if it&#39;s a Promise, it will be unwrapped.</p><h4 id="Parameters" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="callback" tabindex="-1">callback <a class="header-anchor" href="#callback" aria-label="Permalink to &quot;callback&quot;">​</a></h5><p><code>A</code> <em>extends</em> <code>Record</code>&lt;<code>ActionName</code>, <a href="./../type-aliases/Method.html"><code>_Method</code></a>&gt; ? (<code>resolvedReturn</code>) =&gt; <code>void</code> : () =&gt; <code>void</code></p><h4 id="Returns" tabindex="-1">Returns <a class="header-anchor" href="#Returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="args" tabindex="-1">args <a class="header-anchor" href="#args" aria-label="Permalink to &quot;args&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#59873A;">args</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;"> A</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;"> extends</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;"> Record</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">&lt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;">ActionName</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;"> _Method</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">&gt;</span><span style="--shiki-dark:#F286C4;--shiki-light:#AB5959;"> ?</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;"> Parameters</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">&lt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;">A</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">&lt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;">A</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">&gt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">[</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;">ActionName</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">]</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">&gt;</span><span style="--shiki-dark:#F286C4;--shiki-light:#AB5959;"> :</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;"> unknown</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">[];</span></span></code></pre></div><p>Parameters passed to the action</p><hr><h3 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#59873A;">name</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;"> ActionName</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">;</span></span></code></pre></div><p>Name of the action</p><hr><h3 id="onError-" tabindex="-1">onError() <a class="header-anchor" href="#onError-" aria-label="Permalink to &quot;onError()&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#59873A;">onError</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#FFB86C;--shiki-dark-font-style:italic;--shiki-light:#B07D48;--shiki-light-font-style:inherit;">callback</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">)</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;"> =&gt;</span><span style="--shiki-dark:#F286C4;--shiki-light:#AB5959;"> void</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">;</span></span></code></pre></div><p>Sets up a hook if the action fails. Return <code>false</code> to catch the error and stop it from propagating.</p><h4 id="Parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="callback-1" tabindex="-1">callback <a class="header-anchor" href="#callback-1" aria-label="Permalink to &quot;callback&quot;">​</a></h5><p>(<code>error</code>) =&gt; <code>void</code></p><h4 id="Returns-1" tabindex="-1">Returns <a class="header-anchor" href="#Returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="store" tabindex="-1">store <a class="header-anchor" href="#store" aria-label="Permalink to &quot;store&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#59873A;">store</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;"> Store</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">;</span></span></code></pre></div><p>Store that is invoking the action</p>',37)]))}const F=s(n,[["render",r]]);export{c as __pageData,F as default};
