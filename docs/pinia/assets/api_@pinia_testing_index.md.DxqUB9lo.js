import{_ as e,c as a,o as i,a2 as n}from"./chunks/framework.DMet4H9D.js";const f=JSON.parse('{"title":"@pinia/testing","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/@pinia/testing/index.md","filePath":"api/@pinia/testing/index.md"}'),s={name:"api/@pinia/testing/index.md"};function r(o,t,d,c,h,p){return i(),a("div",null,t[0]||(t[0]=[n('<p><a href="./../../">@pinia/root</a> / @pinia/testing</p><h1 id="-pinia-testing" tabindex="-1">@pinia/testing <a class="header-anchor" href="#-pinia-testing" aria-label="Permalink to &quot;@pinia/testing&quot;">​</a></h1><h2 id="Interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#Interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Interface</th><th>Description</th></tr></thead><tbody><tr><td><a href="./interfaces/TestingOptions.html">TestingOptions</a></td><td>-</td></tr><tr><td><a href="./interfaces/TestingPinia.html">TestingPinia</a></td><td>Pinia instance specifically designed for testing. Extends a regular <code>Pinia</code> instance with test specific properties.</td></tr></tbody></table><h2 id="Functions" tabindex="-1">Functions <a class="header-anchor" href="#Functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td><a href="./functions/createTestingPinia.html">createTestingPinia</a></td><td>Creates a pinia instance designed for unit tests that <strong>requires mocking</strong> the stores. By default, <strong>all actions are mocked</strong> and therefore not executed. This allows you to unit test your store and components separately. You can change this with the <code>stubActions</code> option. If you are using jest, they are replaced with <code>jest.fn()</code>, otherwise, you must provide your own <code>createSpy</code> option.</td></tr></tbody></table>',6)]))}const u=e(s,[["render",r]]);export{f as __pageData,u as default};
