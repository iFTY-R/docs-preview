import{_ as l,C as n,c as e,o as p,j as i,G as t,a2 as F,a}from"./chunks/framework.DMet4H9D.js";const u=JSON.parse('{"title":"Testing stores","description":"","frontmatter":{},"headers":[],"relativePath":"cookbook/testing.md","filePath":"cookbook/testing.md"}'),r={name:"cookbook/testing.md"};function d(g,s,y,o,c,E){const h=n("MasteringPiniaLink"),k=n("RuleKitLink");return p(),e("div",null,[s[0]||(s[0]=i("h1",{id:"Testing-stores",tabindex:"-1"},[a("Testing stores "),i("a",{class:"header-anchor",href:"#Testing-stores","aria-label":'Permalink to "Testing stores"'},"â€‹")],-1)),t(h,{href:"https://play.gumlet.io/embed/65f9a9c10bfab01f414c25dc",title:"Watch a free video of Mastering Pinia about testing stores"}),s[1]||(s[1]=i("p",null,"Stores will, by design, be used at many places and can make testing much harder than it should be. Fortunately, this doesn't have to be the case. We need to take care of three things when testing stores:",-1)),s[2]||(s[2]=i("ul",null,[i("li",null,[a("The "),i("code",null,"pinia"),a(" instance: Stores cannot work without it")]),i("li",null,[i("code",null,"actions"),a(": most of the time, they contain the most complex logic of our stores. Wouldn't it be nice if they were mocked by default?")]),i("li",null,"Plugins: If you rely on plugins, you will have to install them for tests too")],-1)),s[3]||(s[3]=i("p",null,"Depending on what or how you are testing, we need to take care of these three things differently.",-1)),t(k),s[4]||(s[4]=F("",38))])}const f=l(r,[["render",d]]);export{u as __pageData,f as default};
