import{_ as a,c as o,a2 as t,o as r}from"./chunks/framework.XosO8Wyc.js";const u=JSON.parse('{"title":"Interface: RouteLocationAsRelativeTyped<RouteMap, Name>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/interfaces/RouteLocationAsRelativeTyped.md","filePath":"api/interfaces/RouteLocationAsRelativeTyped.md"}'),i={name:"api/interfaces/RouteLocationAsRelativeTyped.md"};function n(c,e,h,d,l,s){return r(),o("div",null,e[0]||(e[0]=[t('<p><a href="./../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../">API Documentation</a> / RouteLocationAsRelativeTyped</p><h1 id="Interface-RouteLocationAsRelativeTyped-RouteMap-Name-" tabindex="-1">Interface: RouteLocationAsRelativeTyped&lt;RouteMap, Name&gt; <a class="header-anchor" href="#Interface-RouteLocationAsRelativeTyped-RouteMap-Name-" aria-label="Permalink to &quot;Interface: RouteLocationAsRelativeTyped\\&lt;RouteMap, Name\\&gt;&quot;">​</a></h1><p>Helper to generate a type safe version of the <a href="./../type-aliases/RouteLocationAsRelative.html">RouteLocationAsRelative</a> type.</p><h2 id="Extends" tabindex="-1">Extends <a class="header-anchor" href="#Extends" aria-label="Permalink to &quot;Extends&quot;">​</a></h2><ul><li><a href="./RouteLocationAsRelativeGeneric.html"><code>RouteLocationAsRelativeGeneric</code></a></li></ul><h2 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>RouteMap</strong> <em>extends</em> <a href="./../type-aliases/RouteMapGeneric.html"><code>RouteMapGeneric</code></a> = <a href="./../type-aliases/RouteMapGeneric.html"><code>RouteMapGeneric</code></a></p><p>• <strong>Name</strong> <em>extends</em> keyof <code>RouteMap</code> = keyof <code>RouteMap</code></p><h2 id="Properties" tabindex="-1">Properties <a class="header-anchor" href="#Properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="force-" tabindex="-1">force? <a class="header-anchor" href="#force-" aria-label="Permalink to &quot;force?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>force</strong>: <code>boolean</code></p></blockquote><p>Triggers the navigation even if the location is the same as the current one. Note this will also add a new entry to the history unless <code>replace: true</code> is passed.</p><h4 id="Inherited-from" tabindex="-1">Inherited from <a class="header-anchor" href="#Inherited-from" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./RouteLocationAsRelativeGeneric.html"><code>RouteLocationAsRelativeGeneric</code></a>.<a href="./RouteLocationAsRelativeGeneric.html#force"><code>force</code></a></p><hr><h3 id="hash-" tabindex="-1">hash? <a class="header-anchor" href="#hash-" aria-label="Permalink to &quot;hash?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>hash</strong>: <code>string</code></p></blockquote><h4 id="Inherited-from-1" tabindex="-1">Inherited from <a class="header-anchor" href="#Inherited-from-1" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./RouteLocationAsRelativeGeneric.html"><code>RouteLocationAsRelativeGeneric</code></a>.<a href="./RouteLocationAsRelativeGeneric.html#hash"><code>hash</code></a></p><hr><h3 id="name-" tabindex="-1">name? <a class="header-anchor" href="#name-" aria-label="Permalink to &quot;name?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>name</strong>: <code>Extract</code>&lt;<code>Name</code>, <code>string</code> | <code>symbol</code>&gt;</p></blockquote><h4 id="Overrides" tabindex="-1">Overrides <a class="header-anchor" href="#Overrides" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./RouteLocationAsRelativeGeneric.html"><code>RouteLocationAsRelativeGeneric</code></a>.<a href="./RouteLocationAsRelativeGeneric.html#name"><code>name</code></a></p><hr><h3 id="params-" tabindex="-1">params? <a class="header-anchor" href="#params-" aria-label="Permalink to &quot;params?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>params</strong>: <code>RouteMap</code>[<code>Name</code>][<code>&quot;paramsRaw&quot;</code>]</p></blockquote><h4 id="Overrides-1" tabindex="-1">Overrides <a class="header-anchor" href="#Overrides-1" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./RouteLocationAsRelativeGeneric.html"><code>RouteLocationAsRelativeGeneric</code></a>.<a href="./RouteLocationAsRelativeGeneric.html#params"><code>params</code></a></p><hr><h3 id="path-" tabindex="-1">path? <a class="header-anchor" href="#path-" aria-label="Permalink to &quot;path?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>path</strong>: <code>undefined</code></p></blockquote><p>A relative path to the current location. This property should be removed</p><h4 id="Inherited-from-2" tabindex="-1">Inherited from <a class="header-anchor" href="#Inherited-from-2" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./RouteLocationAsRelativeGeneric.html"><code>RouteLocationAsRelativeGeneric</code></a>.<a href="./RouteLocationAsRelativeGeneric.html#path"><code>path</code></a></p><hr><h3 id="query-" tabindex="-1">query? <a class="header-anchor" href="#query-" aria-label="Permalink to &quot;query?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>query</strong>: <a href="./../type-aliases/LocationQueryRaw.html"><code>LocationQueryRaw</code></a></p></blockquote><h4 id="Inherited-from-3" tabindex="-1">Inherited from <a class="header-anchor" href="#Inherited-from-3" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./RouteLocationAsRelativeGeneric.html"><code>RouteLocationAsRelativeGeneric</code></a>.<a href="./RouteLocationAsRelativeGeneric.html#query"><code>query</code></a></p><hr><h3 id="replace-" tabindex="-1">replace? <a class="header-anchor" href="#replace-" aria-label="Permalink to &quot;replace?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>replace</strong>: <code>boolean</code></p></blockquote><p>Replace the entry in the history instead of pushing a new entry</p><h4 id="Inherited-from-4" tabindex="-1">Inherited from <a class="header-anchor" href="#Inherited-from-4" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./RouteLocationAsRelativeGeneric.html"><code>RouteLocationAsRelativeGeneric</code></a>.<a href="./RouteLocationAsRelativeGeneric.html#replace"><code>replace</code></a></p><hr><h3 id="state-" tabindex="-1">state? <a class="header-anchor" href="#state-" aria-label="Permalink to &quot;state?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>state</strong>: <a href="./HistoryState.html"><code>HistoryState</code></a></p></blockquote><p>State to save using the History API. This cannot contain any reactive values and some primitives like Symbols are forbidden. More info at <a href="https://developer.mozilla.org/en-US/docs/Web/API/History/state" target="_blank" rel="noreferrer">https://developer.mozilla.org/en-US/docs/Web/API/History/state</a></p><h4 id="Inherited-from-5" tabindex="-1">Inherited from <a class="header-anchor" href="#Inherited-from-5" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./RouteLocationAsRelativeGeneric.html"><code>RouteLocationAsRelativeGeneric</code></a>.<a href="./RouteLocationAsRelativeGeneric.html#state"><code>state</code></a></p>',54)]))}const m=a(i,[["render",n]]);export{u as __pageData,m as default};
