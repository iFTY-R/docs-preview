import{_ as t,c as a,a2 as o,o as n}from"./chunks/framework.XosO8Wyc.js";const h=JSON.parse('{"title":"Function: onBeforeRouteUpdate()","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/functions/onBeforeRouteUpdate.md","filePath":"api/functions/onBeforeRouteUpdate.md"}'),r={name:"api/functions/onBeforeRouteUpdate.md"};function d(i,e,u,s,c,p){return n(),a("div",null,e[0]||(e[0]=[o('<p><a href="./../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../">API Documentation</a> / onBeforeRouteUpdate</p><h1 id="Function-onBeforeRouteUpdate-" tabindex="-1">Function: onBeforeRouteUpdate() <a class="header-anchor" href="#Function-onBeforeRouteUpdate-" aria-label="Permalink to &quot;Function: onBeforeRouteUpdate()&quot;">​</a></h1><blockquote><p><strong>onBeforeRouteUpdate</strong>(<code>updateGuard</code>): <code>void</code></p></blockquote><p>Add a navigation guard that triggers whenever the current location is about to be updated. Similar to beforeRouteUpdate but can be used in any component. The guard is removed when the component is unmounted.</p><h2 id="Parameters" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>updateGuard</strong>: <a href="./../interfaces/NavigationGuard.html"><code>NavigationGuard</code></a></p><p><a href="./../interfaces/NavigationGuard.html">NavigationGuard</a></p><h2 id="Returns" tabindex="-1">Returns <a class="header-anchor" href="#Returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>void</code></p>',11)]))}const l=t(r,[["render",d]]);export{h as __pageData,l as default};
