import{_ as t,c as o,a2 as a,o as c}from"./chunks/framework.XosO8Wyc.js";const R=JSON.parse('{"title":"Type Alias: RouteLocationRaw<Name>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/type-aliases/RouteLocationRaw.md","filePath":"api/type-aliases/RouteLocationRaw.md"}'),i={name:"api/type-aliases/RouteLocationRaw.md"};function n(r,e,s,d,p,l){return c(),o("div",null,e[0]||(e[0]=[a('<p><a href="./../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../">API Documentation</a> / RouteLocationRaw</p><h1 id="Type-Alias-RouteLocationRaw-Name-" tabindex="-1">Type Alias: RouteLocationRaw&lt;Name&gt; <a class="header-anchor" href="#Type-Alias-RouteLocationRaw-Name-" aria-label="Permalink to &quot;Type Alias: RouteLocationRaw\\&lt;Name\\&gt;&quot;">​</a></h1><blockquote><p><strong>RouteLocationRaw</strong>&lt;<code>Name</code>&gt;: <a href="./RouteMapGeneric.html"><code>RouteMapGeneric</code></a> <em>extends</em> <a href="./RouteMap.html"><code>RouteMap</code></a> ? <a href="./RouteLocationAsString.html"><code>RouteLocationAsString</code></a> | <a href="./../interfaces/RouteLocationAsRelativeGeneric.html"><code>RouteLocationAsRelativeGeneric</code></a> | <a href="./../interfaces/RouteLocationAsPathGeneric.html"><code>RouteLocationAsPathGeneric</code></a> : <code>_LiteralUnion</code>&lt;<a href="./RouteLocationAsStringTypedList.html"><code>RouteLocationAsStringTypedList</code></a>&lt;<a href="./RouteMap.html"><code>RouteMap</code></a>&gt;[<code>Name</code>], <code>string</code>&gt; | <a href="./RouteLocationAsRelativeTypedList.html"><code>RouteLocationAsRelativeTypedList</code></a>&lt;<a href="./RouteMap.html"><code>RouteMap</code></a>&gt;[<code>Name</code>] | <a href="./RouteLocationAsPathTypedList.html"><code>RouteLocationAsPathTypedList</code></a>&lt;<a href="./RouteMap.html"><code>RouteMap</code></a>&gt;[<code>Name</code>]</p></blockquote><p>Route location that can be passed to <code>router.push()</code> and other user-facing APIs.</p><h2 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Name</strong> <em>extends</em> keyof <a href="./RouteMap.html"><code>RouteMap</code></a> = keyof <a href="./RouteMap.html"><code>RouteMap</code></a></p>',8)]))}const h=t(i,[["render",n]]);export{R as __pageData,h as default};
