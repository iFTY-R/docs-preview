import{_ as e,c as t,a2 as o,o as r}from"./chunks/framework.XosO8Wyc.js";const d=JSON.parse('{"title":"Type Alias: RouteParamsRaw<Name>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/type-aliases/RouteParamsRaw.md","filePath":"api/type-aliases/RouteParamsRaw.md"}'),s={name:"api/type-aliases/RouteParamsRaw.md"};function m(p,a,n,i,l,u){return r(),t("div",null,a[0]||(a[0]=[o('<p><a href="./../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../">API Documentation</a> / RouteParamsRaw</p><h1 id="Type-Alias-RouteParamsRaw-Name-" tabindex="-1">Type Alias: RouteParamsRaw&lt;Name&gt; <a class="header-anchor" href="#Type-Alias-RouteParamsRaw-Name-" aria-label="Permalink to &quot;Type Alias: RouteParamsRaw\\&lt;Name\\&gt;&quot;">​</a></h1><blockquote><p><strong>RouteParamsRaw</strong>&lt;<code>Name</code>&gt;: <a href="./RouteMap.html"><code>RouteMap</code></a>[<code>Name</code>][<code>&quot;paramsRaw&quot;</code>]</p></blockquote><p>Generate a type safe raw params for a route location. Requires the name of the route to be passed as a generic.</p><h2 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Name</strong> <em>extends</em> keyof <a href="./RouteMap.html"><code>RouteMap</code></a> = keyof <a href="./RouteMap.html"><code>RouteMap</code></a></p><h2 id="See" tabindex="-1">See <a class="header-anchor" href="#See" aria-label="Permalink to &quot;See&quot;">​</a></h2><p><a href="./RouteParamsRaw.html">RouteParamsRaw</a></p>',10)]))}const R=e(s,[["render",m]]);export{d as __pageData,R as default};
