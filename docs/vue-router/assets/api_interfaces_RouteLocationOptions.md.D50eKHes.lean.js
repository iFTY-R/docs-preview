import{_ as o,c as t,a2 as a,o as r}from"./chunks/framework.XosO8Wyc.js";const u=JSON.parse('{"title":"Interface: RouteLocationOptions","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/interfaces/RouteLocationOptions.md","filePath":"api/interfaces/RouteLocationOptions.md"}'),n={name:"api/interfaces/RouteLocationOptions.md"};function i(c,e,s,l,d,h){return r(),t("div",null,e[0]||(e[0]=[a('<p><a href="./../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../">API Documentation</a> / RouteLocationOptions</p><h1 id="Interface-RouteLocationOptions" tabindex="-1">Interface: RouteLocationOptions <a class="header-anchor" href="#Interface-RouteLocationOptions" aria-label="Permalink to &quot;Interface: RouteLocationOptions&quot;">​</a></h1><p>Common options for all navigation methods.</p><h2 id="Extended-by" tabindex="-1">Extended by <a class="header-anchor" href="#Extended-by" aria-label="Permalink to &quot;Extended by&quot;">​</a></h2><ul><li><a href="./RouteLocationNamedRaw.html"><code>RouteLocationNamedRaw</code></a></li><li><a href="./RouteLocationPathRaw.html"><code>RouteLocationPathRaw</code></a></li><li><a href="./RouteLocationAsRelativeGeneric.html"><code>RouteLocationAsRelativeGeneric</code></a></li><li><a href="./RouteLocationAsPathGeneric.html"><code>RouteLocationAsPathGeneric</code></a></li></ul><h2 id="Properties" tabindex="-1">Properties <a class="header-anchor" href="#Properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="force-" tabindex="-1">force? <a class="header-anchor" href="#force-" aria-label="Permalink to &quot;force?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>force</strong>: <code>boolean</code></p></blockquote><p>Triggers the navigation even if the location is the same as the current one. Note this will also add a new entry to the history unless <code>replace: true</code> is passed.</p><hr><h3 id="replace-" tabindex="-1">replace? <a class="header-anchor" href="#replace-" aria-label="Permalink to &quot;replace?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>replace</strong>: <code>boolean</code></p></blockquote><p>Replace the entry in the history instead of pushing a new entry</p><hr><h3 id="state-" tabindex="-1">state? <a class="header-anchor" href="#state-" aria-label="Permalink to &quot;state?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>state</strong>: <a href="./HistoryState.html"><code>HistoryState</code></a></p></blockquote><p>State to save using the History API. This cannot contain any reactive values and some primitives like Symbols are forbidden. More info at <a href="https://developer.mozilla.org/en-US/docs/Web/API/History/state" target="_blank" rel="noreferrer">https://developer.mozilla.org/en-US/docs/Web/API/History/state</a></p>',19)]))}const f=o(n,[["render",i]]);export{u as __pageData,f as default};
