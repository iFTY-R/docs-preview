import{_ as a,c as t,a2 as o,o as r}from"./chunks/framework.XosO8Wyc.js";const p=JSON.parse('{"title":"Interface: UseLinkReturn<Name>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/interfaces/UseLinkReturn.md","filePath":"api/interfaces/UseLinkReturn.md"}'),n={name:"api/interfaces/UseLinkReturn.md"};function i(s,e,c,d,l,h){return r(),t("div",null,e[0]||(e[0]=[o('<p><a href="./../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../">API Documentation</a> / UseLinkReturn</p><h1 id="Interface-UseLinkReturn-Name-" tabindex="-1">Interface: UseLinkReturn&lt;Name&gt; <a class="header-anchor" href="#Interface-UseLinkReturn-Name-" aria-label="Permalink to &quot;Interface: UseLinkReturn\\&lt;Name\\&gt;&quot;">​</a></h1><p><strong><code>Internal</code></strong></p><p>Return type of <a href="./../functions/useLink.html">useLink</a>.</p><h2 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Name</strong> <em>extends</em> keyof <a href="./../type-aliases/RouteMap.html"><code>RouteMap</code></a> = keyof <a href="./../type-aliases/RouteMap.html"><code>RouteMap</code></a></p><h2 id="Properties" tabindex="-1">Properties <a class="header-anchor" href="#Properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="href" tabindex="-1">href <a class="header-anchor" href="#href" aria-label="Permalink to &quot;href&quot;">​</a></h3><blockquote><p><strong>href</strong>: <code>ComputedRef</code>&lt;<code>string</code>&gt;</p></blockquote><hr><h3 id="isActive" tabindex="-1">isActive <a class="header-anchor" href="#isActive" aria-label="Permalink to &quot;isActive&quot;">​</a></h3><blockquote><p><strong>isActive</strong>: <code>ComputedRef</code>&lt;<code>boolean</code>&gt;</p></blockquote><hr><h3 id="isExactActive" tabindex="-1">isExactActive <a class="header-anchor" href="#isExactActive" aria-label="Permalink to &quot;isExactActive&quot;">​</a></h3><blockquote><p><strong>isExactActive</strong>: <code>ComputedRef</code>&lt;<code>boolean</code>&gt;</p></blockquote><hr><h3 id="route" tabindex="-1">route <a class="header-anchor" href="#route" aria-label="Permalink to &quot;route&quot;">​</a></h3><blockquote><p><strong>route</strong>: <code>ComputedRef</code>&lt;<a href="./RouteLocationResolvedGeneric.html"><code>RouteLocationResolvedGeneric</code></a>&gt;</p></blockquote><h2 id="Methods" tabindex="-1">Methods <a class="header-anchor" href="#Methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="navigate-" tabindex="-1">navigate() <a class="header-anchor" href="#navigate-" aria-label="Permalink to &quot;navigate()&quot;">​</a></h3><blockquote><p><strong>navigate</strong>(<code>e</code>?): <code>Promise</code>&lt;<code>void</code> | <a href="./NavigationFailure.html"><code>NavigationFailure</code></a>&gt;</p></blockquote><h4 id="Parameters" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>e?</strong>: <code>MouseEvent</code></p><h4 id="Returns" tabindex="-1">Returns <a class="header-anchor" href="#Returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code> | <a href="./NavigationFailure.html"><code>NavigationFailure</code></a>&gt;</p>',27)]))}const m=a(n,[["render",i]]);export{p as __pageData,m as default};
