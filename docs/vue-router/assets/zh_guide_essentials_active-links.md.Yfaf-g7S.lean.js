import{_ as n,c as e,a2 as i,G as t,B as l,o as p}from"./chunks/framework.XosO8Wyc.js";const y=JSON.parse('{"title":"匹配当前路由的链接","description":"","frontmatter":{},"headers":[],"relativePath":"zh/guide/essentials/active-links.md","filePath":"zh/guide/essentials/active-links.md"}'),h={name:"zh/guide/essentials/active-links.md"};function k(r,s,d,o,c,B){const a=l("RuleKitLink");return p(),e("div",null,[s[0]||(s[0]=i(`<h1 id="匹配当前路由的链接" tabindex="-1">匹配当前路由的链接 <a class="header-anchor" href="#匹配当前路由的链接" aria-label="Permalink to &quot;匹配当前路由的链接&quot;">​</a></h1><p>应用程序通常都会有一个渲染 RouterLink 列表的导航组件。我们也许想对这个列表中匹配当前路由的链接进行视觉区分。</p><p>RouterLink 组件会为匹配当前路由的链接添加两个 CSS 类，<code>router-link-active</code> 和 <code>router-link-exact-active</code>。要理解它们之间的区别，我们首先需要了解 Vue Router 如何判断一个链接是<strong>匹配当前路由的</strong>。</p><h2 id="链接在什么时候匹配当前路由" tabindex="-1">链接在什么时候匹配当前路由 <a class="header-anchor" href="#链接在什么时候匹配当前路由" aria-label="Permalink to &quot;链接在什么时候匹配当前路由&quot;">​</a></h2><p>当满足以下条件时，RouterLink 被认为是<strong>匹配当前路由的</strong>：</p><ol><li>它与当前路径匹配相同的路由记录（即配置的路由）。</li><li>它的 <code>params</code> 与当前路径的 <code>params</code> 相同。</li></ol><p>如果你使用了<a href="./nested-routes.html">嵌套路由</a>，任何指向祖先路由的链接也会被认为是匹配当前路由的，只要相关的 <code>params</code> 匹配。</p><p>其他路由属性，例如 <a href="./../../api/interfaces/RouteLocationNormalized.html#query"><code>query</code></a>，不会被考虑在内。</p><p>路径不一定需要完全匹配。例如，使用 <a href="./redirect-and-alias.html#Alias"><code>alias</code></a> 仍然会被认为是匹配的，只要它解析到相同的路由记录和 <code>params</code>。</p><p>如果一个路由有 <a href="./redirect-and-alias.html#Redirect"><code>redirect</code></a>，在检查链接是否匹配当前路由时不会跟随重定向。</p><h2 id="精确匹配当前路由的链接" tabindex="-1">精确匹配当前路由的链接 <a class="header-anchor" href="#精确匹配当前路由的链接" aria-label="Permalink to &quot;精确匹配当前路由的链接&quot;">​</a></h2><p><strong>精确</strong>匹配不包括祖先路由。</p><p>假设我们有以下路由：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#D73A49;">const</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;"> routes</span><span style="--shiki-dark:#56B6C2;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;"> [</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">  {</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">    path</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">&#39;/user/:username&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">    component</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">User</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">    children</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">: [</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">      {</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">        path</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">&#39;role/:roleId&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">        component</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">Role</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">      }</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">    ]</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">  }</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">]</span></span></code></pre></div><p>然后考虑这两个链接：</p><div class="language-template vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki shiki-themes one-dark-pro github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;">RouterLink</span><span style="--shiki-dark:#D19A66;--shiki-light:#6F42C1;"> to</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">=</span><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">&quot;/user/erina&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&gt;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">  User</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&lt;/</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;">RouterLink</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&gt;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;">RouterLink</span><span style="--shiki-dark:#D19A66;--shiki-light:#6F42C1;"> to</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">=</span><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">&quot;/user/erina/role/admin&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&gt;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">  Role</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&lt;/</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;">RouterLink</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&gt;</span></span></code></pre></div><p>如果当前路径是 <code>/user/erina/role/admin</code>，那么这两个链接都会被认为是<strong>匹配当前路由的</strong>，因此 <code>router-link-active</code> 类会应用于这两个链接。但只有第二个链接会被认为是<strong>精确的</strong>，因此只有第二个链接会有 <code>router-link-exact-active</code> 类。</p>`,17)),t(a),s[1]||(s[1]=i(`<h2 id="配置类名" tabindex="-1">配置类名 <a class="header-anchor" href="#配置类名" aria-label="Permalink to &quot;配置类名&quot;">​</a></h2><p>RouterLink 组件有两个属性，<code>activeClass</code> 和 <code>exactActiveClass</code>，可以用来更改应用的类名：</p><div class="language-template vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki shiki-themes one-dark-pro github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;">RouterLink</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#6F42C1;">  activeClass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">=</span><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">&quot;border-indigo-500&quot;</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#6F42C1;">  exactActiveClass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">=</span><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">&quot;border-indigo-700&quot;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">  ...</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&gt;</span></span></code></pre></div><p>默认的类名也可以通过传递 <code>linkActiveClass</code> 和 <code>linkExactActiveClass</code> 选项给 <code>createRouter()</code> 来全局更改：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#D73A49;">const</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;"> router</span><span style="--shiki-dark:#56B6C2;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#61AFEF;--shiki-light:#6F42C1;"> createRouter</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">  linkActiveClass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">&#39;border-indigo-500&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">  linkExactActiveClass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">&#39;border-indigo-700&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">  // ...</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">})</span></span></code></pre></div><p>参见<a href="./../advanced/extending-router-link.html">扩展 RouterLink</a> 以获取使用 <code>v-slot</code> API 进行更高级自定义的技术。</p>`,6))])}const u=n(h,[["render",k]]);export{y as __pageData,u as default};
