import{_ as a,c as r,a2 as o,o as t}from"./chunks/framework.XosO8Wyc.js";const u=JSON.parse('{"title":"Type Alias: ParamValueZeroOrOne<isRaw>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/type-aliases/ParamValueZeroOrOne.md","filePath":"api/type-aliases/ParamValueZeroOrOne.md"}'),s={name:"api/type-aliases/ParamValueZeroOrOne.md"};function n(i,e,l,d,c,p){return t(),r("div",null,e[0]||(e[0]=[o('<p><a href="./../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../">API Documentation</a> / ParamValueZeroOrOne</p><h1 id="Type-Alias-ParamValueZeroOrOne-isRaw-" tabindex="-1">Type Alias: ParamValueZeroOrOne&lt;isRaw&gt; <a class="header-anchor" href="#Type-Alias-ParamValueZeroOrOne-isRaw-" aria-label="Permalink to &quot;Type Alias: ParamValueZeroOrOne\\&lt;isRaw\\&gt;&quot;">​</a></h1><blockquote><p><strong>ParamValueZeroOrOne</strong>&lt;<code>isRaw</code>&gt;: <code>true</code> <em>extends</em> <code>isRaw</code> ? <code>string</code> | <code>number</code> | <code>null</code> | <code>undefined</code> : <code>string</code></p></blockquote><p>Utility type for raw and non raw params like :id?</p><h2 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>isRaw</strong> <em>extends</em> <code>boolean</code></p>',8)]))}const O=a(s,[["render",n]]);export{u as __pageData,O as default};
