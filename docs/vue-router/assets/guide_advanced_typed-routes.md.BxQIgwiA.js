import{_ as l,c as p,j as i,a,G as n,a2 as k,B as t,o as r}from"./chunks/framework.XosO8Wyc.js";const F=JSON.parse('{"title":"Typed Routes","description":"","frontmatter":{},"headers":[],"relativePath":"guide/advanced/typed-routes.md","filePath":"guide/advanced/typed-routes.md"}'),d={name:"guide/advanced/typed-routes.md"},B={id:"Typed-Routes-",tabindex:"-1"};function o(g,s,y,c,C,u){const e=t("Badge"),h=t("RuleKitLink");return r(),p("div",null,[i("h1",B,[s[0]||(s[0]=a("Typed Routes ")),n(e,{type:"tip",text:"v4.4.0+"}),s[1]||(s[1]=a()),s[2]||(s[2]=i("a",{class:"header-anchor",href:"#Typed-Routes-","aria-label":'Permalink to "Typed Routes <Badge type="tip" text="v4.4.0+" />"'},"​",-1))]),n(h),s[3]||(s[3]=k(`<p><img src="https://user-images.githubusercontent.com/664177/176442066-c4e7fa31-4f06-4690-a49f-ed0fd880dfca.png" alt="RouterLink to autocomplete"></p><p>It&#39;s possible to configure the router to have a <em>map</em> of typed routes. While this can be done manually, it is recommended to use the <a href="https://github.com/posva/unplugin-vue-router" target="_blank" rel="noreferrer">unplugin-vue-router</a> plugin to generate the routes and the types automatically.</p><h2 id="Manual-Configuration" tabindex="-1">Manual Configuration <a class="header-anchor" href="#Manual-Configuration" aria-label="Permalink to &quot;Manual Configuration&quot;">​</a></h2><p>Here is an example of how to manually configure typed routes:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes one-dark-pro github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// import the \`RouteRecordInfo\` type from vue-router to type your routes</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#D73A49;">import</span><span style="--shiki-dark:#C678DD;--shiki-light:#D73A49;"> type</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;"> { </span><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">RouteRecordInfo</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;"> } </span><span style="--shiki-dark:#C678DD;--shiki-light:#D73A49;">from</span><span style="--shiki-dark:#98C379;--shiki-light:#032F62;"> &#39;vue-router&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// Define an interface of routes</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#D73A49;"> interface</span><span style="--shiki-dark:#E5C07B;--shiki-light:#6F42C1;"> RouteNamedMap</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">  // each key is a name</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E36209;">  home</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#6F42C1;"> RouteRecordInfo</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&lt;</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">    // here we have the same name</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">    &#39;home&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">    // this is the path, it will appear in autocompletion</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">    &#39;/&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">    // these are the raw params (what can be passed to router.push() and RouterLink&#39;s &quot;to&quot; prop)</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">    // In this case, there are no params allowed</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#6F42C1;">    Record</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;">never</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;">never</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&gt;,</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">    // these are the normalized params (what you get from useRoute())</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#6F42C1;">    Record</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;">never</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;">never</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&gt;,</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">    // this is a union of all children route names, in this case, there are none</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;">    never</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">  &gt;</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">  // repeat for each route...</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">  // Note you can name them whatever you want</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">  &#39;named-param&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#6F42C1;"> RouteRecordInfo</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&lt;</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">    &#39;named-param&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">    &#39;/:name&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">    { </span><span style="--shiki-dark:#E06C75;--shiki-light:#E36209;">name</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;"> string</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#D73A49;"> |</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;"> number</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;"> }, </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// Allows string or number</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">    { </span><span style="--shiki-dark:#E06C75;--shiki-light:#E36209;">name</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;"> string</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;"> }, </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// but always returns a string from the URL</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">    &#39;named-param-edit&#39;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">  &gt;</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">  &#39;named-param-edit&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#6F42C1;"> RouteRecordInfo</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&lt;</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">    &#39;named-param-edit&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">    &#39;/:name/edit&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">    { </span><span style="--shiki-dark:#E06C75;--shiki-light:#E36209;">name</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;"> string</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#D73A49;"> |</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;"> number</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;"> }, </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// we also include parent params</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">    { </span><span style="--shiki-dark:#E06C75;--shiki-light:#E36209;">name</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;"> string</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;"> },</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;">    never</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">  &gt;</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">  &#39;article-details&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#6F42C1;"> RouteRecordInfo</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&lt;</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">    &#39;article-details&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">    &#39;/articles/:id+&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">    { </span><span style="--shiki-dark:#E06C75;--shiki-light:#E36209;">id</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#6F42C1;"> Array</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;">number</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#D73A49;"> |</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;"> string</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&gt; },</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">    { </span><span style="--shiki-dark:#E06C75;--shiki-light:#E36209;">id</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;"> string</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">[] },</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;">    never</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">  &gt;</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">  &#39;not-found&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#6F42C1;"> RouteRecordInfo</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&lt;</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">    &#39;not-found&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">    &#39;/:path(.*)&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">    { </span><span style="--shiki-dark:#E06C75;--shiki-light:#E36209;">path</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;"> string</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;"> },</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">    { </span><span style="--shiki-dark:#E06C75;--shiki-light:#E36209;">path</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;"> string</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;"> },</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;">    never</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">  &gt;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// Last, you will need to augment the Vue Router types with this map of routes</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#D73A49;">declare</span><span style="--shiki-dark:#C678DD;--shiki-light:#D73A49;"> module</span><span style="--shiki-dark:#98C379;--shiki-light:#032F62;"> &#39;vue-router&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#D73A49;">  interface</span><span style="--shiki-dark:#E5C07B;--shiki-light:#6F42C1;"> TypesConfig</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E36209;">    RouteNamedMap</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#6F42C1;"> RouteNamedMap</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">  }</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This is indeed tedious and error-prone. That&#39;s why it&#39;s recommended to use <a href="https://github.com/posva/unplugin-vue-router" target="_blank" rel="noreferrer">unplugin-vue-router</a> to generate the routes and the types automatically.</p></div>`,6))])}const A=l(d,[["render",o]]);export{F as __pageData,A as default};
