import{_ as o,c as a,a2 as t,o as r}from"./chunks/framework.XosO8Wyc.js";const p=JSON.parse('{"title":"Interface: RouteLocationAsPathGeneric","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/interfaces/RouteLocationAsPathGeneric.md","filePath":"api/interfaces/RouteLocationAsPathGeneric.md"}'),n={name:"api/interfaces/RouteLocationAsPathGeneric.md"};function i(h,e,c,s,d,l){return r(),a("div",null,e[0]||(e[0]=[t('<p><a href="./../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../">API Documentation</a> / RouteLocationAsPathGeneric</p><h1 id="Interface-RouteLocationAsPathGeneric" tabindex="-1">Interface: RouteLocationAsPathGeneric <a class="header-anchor" href="#Interface-RouteLocationAsPathGeneric" aria-label="Permalink to &quot;Interface: RouteLocationAsPathGeneric&quot;">​</a></h1><p>Generic version of <a href="./../type-aliases/RouteLocationAsPath.html">RouteLocationAsPath</a>. It is used when no <a href="./../type-aliases/RouteMap.html">RouteMap</a> is provided.</p><h2 id="Extends" tabindex="-1">Extends <a class="header-anchor" href="#Extends" aria-label="Permalink to &quot;Extends&quot;">​</a></h2><ul><li><a href="./RouteQueryAndHash.html"><code>RouteQueryAndHash</code></a>.<a href="./RouteLocationOptions.html"><code>RouteLocationOptions</code></a></li></ul><h2 id="Extended-by" tabindex="-1">Extended by <a class="header-anchor" href="#Extended-by" aria-label="Permalink to &quot;Extended by&quot;">​</a></h2><ul><li><a href="./RouteLocationAsPathTyped.html"><code>RouteLocationAsPathTyped</code></a></li></ul><h2 id="Properties" tabindex="-1">Properties <a class="header-anchor" href="#Properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="force-" tabindex="-1">force? <a class="header-anchor" href="#force-" aria-label="Permalink to &quot;force?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>force</strong>: <code>boolean</code></p></blockquote><p>Triggers the navigation even if the location is the same as the current one. Note this will also add a new entry to the history unless <code>replace: true</code> is passed.</p><h4 id="Inherited-from" tabindex="-1">Inherited from <a class="header-anchor" href="#Inherited-from" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./RouteLocationOptions.html"><code>RouteLocationOptions</code></a>.<a href="./RouteLocationOptions.html#force"><code>force</code></a></p><hr><h3 id="hash-" tabindex="-1">hash? <a class="header-anchor" href="#hash-" aria-label="Permalink to &quot;hash?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>hash</strong>: <code>string</code></p></blockquote><h4 id="Inherited-from-1" tabindex="-1">Inherited from <a class="header-anchor" href="#Inherited-from-1" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./RouteQueryAndHash.html"><code>RouteQueryAndHash</code></a>.<a href="./RouteQueryAndHash.html#hash"><code>hash</code></a></p><hr><h3 id="path" tabindex="-1">path <a class="header-anchor" href="#path" aria-label="Permalink to &quot;path&quot;">​</a></h3><blockquote><p><strong>path</strong>: <code>string</code></p></blockquote><p>Percentage encoded pathname section of the URL.</p><hr><h3 id="query-" tabindex="-1">query? <a class="header-anchor" href="#query-" aria-label="Permalink to &quot;query?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>query</strong>: <a href="./../type-aliases/LocationQueryRaw.html"><code>LocationQueryRaw</code></a></p></blockquote><h4 id="Inherited-from-2" tabindex="-1">Inherited from <a class="header-anchor" href="#Inherited-from-2" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./RouteQueryAndHash.html"><code>RouteQueryAndHash</code></a>.<a href="./RouteQueryAndHash.html#query"><code>query</code></a></p><hr><h3 id="replace-" tabindex="-1">replace? <a class="header-anchor" href="#replace-" aria-label="Permalink to &quot;replace?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>replace</strong>: <code>boolean</code></p></blockquote><p>Replace the entry in the history instead of pushing a new entry</p><h4 id="Inherited-from-3" tabindex="-1">Inherited from <a class="header-anchor" href="#Inherited-from-3" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./RouteLocationOptions.html"><code>RouteLocationOptions</code></a>.<a href="./RouteLocationOptions.html#replace"><code>replace</code></a></p><hr><h3 id="state-" tabindex="-1">state? <a class="header-anchor" href="#state-" aria-label="Permalink to &quot;state?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>state</strong>: <a href="./HistoryState.html"><code>HistoryState</code></a></p></blockquote><p>State to save using the History API. This cannot contain any reactive values and some primitives like Symbols are forbidden. More info at <a href="https://developer.mozilla.org/en-US/docs/Web/API/History/state" target="_blank" rel="noreferrer">https://developer.mozilla.org/en-US/docs/Web/API/History/state</a></p><h4 id="Inherited-from-4" tabindex="-1">Inherited from <a class="header-anchor" href="#Inherited-from-4" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./RouteLocationOptions.html"><code>RouteLocationOptions</code></a>.<a href="./RouteLocationOptions.html#state"><code>state</code></a></p>',41)]))}const f=o(n,[["render",i]]);export{p as __pageData,f as default};
