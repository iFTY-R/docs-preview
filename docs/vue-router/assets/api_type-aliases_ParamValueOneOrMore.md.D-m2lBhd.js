import{_ as e,c as r,a2 as t,o}from"./chunks/framework.XosO8Wyc.js";const u=JSON.parse('{"title":"Type Alias: ParamValueOneOrMore<isRaw>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/type-aliases/ParamValueOneOrMore.md","filePath":"api/type-aliases/ParamValueOneOrMore.md"}'),s={name:"api/type-aliases/ParamValueOneOrMore.md"};function l(n,a,i,p,m,c){return o(),r("div",null,a[0]||(a[0]=[t('<p><a href="./../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../">API Documentation</a> / ParamValueOneOrMore</p><h1 id="Type-Alias-ParamValueOneOrMore-isRaw-" tabindex="-1">Type Alias: ParamValueOneOrMore&lt;isRaw&gt; <a class="header-anchor" href="#Type-Alias-ParamValueOneOrMore-isRaw-" aria-label="Permalink to &quot;Type Alias: ParamValueOneOrMore\\&lt;isRaw\\&gt;&quot;">​</a></h1><blockquote><p><strong>ParamValueOneOrMore</strong>&lt;<code>isRaw</code>&gt;: [<a href="./ParamValue.html"><code>ParamValue</code></a>&lt;<code>isRaw</code>&gt;, <code>...ParamValue&lt;isRaw&gt;[]</code>]</p></blockquote><p>Utility type for raw and non raw params like :id+</p><h2 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>isRaw</strong> <em>extends</em> <code>boolean</code></p>',8)]))}const P=e(s,[["render",l]]);export{u as __pageData,P as default};
