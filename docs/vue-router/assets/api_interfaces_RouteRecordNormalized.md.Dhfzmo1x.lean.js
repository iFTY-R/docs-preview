import{_ as o,c as a,a2 as t,o as r}from"./chunks/framework.XosO8Wyc.js";const p=JSON.parse('{"title":"Interface: RouteRecordNormalized","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/interfaces/RouteRecordNormalized.md","filePath":"api/interfaces/RouteRecordNormalized.md"}'),d={name:"api/interfaces/RouteRecordNormalized.md"};function n(c,e,i,s,l,h){return r(),a("div",null,e[0]||(e[0]=[t('<p><a href="./../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../">API Documentation</a> / RouteRecordNormalized</p><h1 id="Interface-RouteRecordNormalized" tabindex="-1">Interface: RouteRecordNormalized <a class="header-anchor" href="#Interface-RouteRecordNormalized" aria-label="Permalink to &quot;Interface: RouteRecordNormalized&quot;">​</a></h1><p>Normalized version of a <a href="./../type-aliases/RouteRecord.html">route record</a>.</p><h2 id="Extended-by" tabindex="-1">Extended by <a class="header-anchor" href="#Extended-by" aria-label="Permalink to &quot;Extended by&quot;">​</a></h2><ul><li><a href="./RouteLocationMatched.html"><code>RouteLocationMatched</code></a></li></ul><h2 id="Properties" tabindex="-1">Properties <a class="header-anchor" href="#Properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="aliasOf" tabindex="-1">aliasOf <a class="header-anchor" href="#aliasOf" aria-label="Permalink to &quot;aliasOf&quot;">​</a></h3><blockquote><p><strong>aliasOf</strong>: <code>undefined</code> | <a href="./RouteRecordNormalized.html"><code>RouteRecordNormalized</code></a></p></blockquote><p>Defines if this record is the alias of another one. This property is <code>undefined</code> if the record is the original one.</p><hr><h3 id="beforeEnter" tabindex="-1">beforeEnter <a class="header-anchor" href="#beforeEnter" aria-label="Permalink to &quot;beforeEnter&quot;">​</a></h3><blockquote><p><strong>beforeEnter</strong>: <code>undefined</code> | <a href="./NavigationGuardWithThis.html"><code>NavigationGuardWithThis</code></a>&lt;<code>undefined</code>&gt; | <a href="./NavigationGuardWithThis.html"><code>NavigationGuardWithThis</code></a>&lt;<code>undefined</code>&gt;[]</p></blockquote><p>Registered beforeEnter guards</p><hr><h3 id="children" tabindex="-1">children <a class="header-anchor" href="#children" aria-label="Permalink to &quot;children&quot;">​</a></h3><blockquote><p><strong>children</strong>: <a href="./../type-aliases/RouteRecordRaw.html"><code>RouteRecordRaw</code></a>[]</p></blockquote><p>Nested route records.</p><hr><h3 id="components" tabindex="-1">components <a class="header-anchor" href="#components" aria-label="Permalink to &quot;components&quot;">​</a></h3><blockquote><p><strong>components</strong>: <code>undefined</code> | <code>null</code> | <code>Record</code>&lt;<code>string</code>, <code>RawRouteComponent</code>&gt;</p></blockquote><p>Components to display when the URL matches this route. Allow using named views.</p><hr><h3 id="enterCallbacks" tabindex="-1">enterCallbacks <a class="header-anchor" href="#enterCallbacks" aria-label="Permalink to &quot;enterCallbacks&quot;">​</a></h3><blockquote><p><strong>enterCallbacks</strong>: <code>Record</code>&lt;<code>string</code>, <a href="./../type-aliases/NavigationGuardNextCallback.html"><code>NavigationGuardNextCallback</code></a>[]&gt;</p></blockquote><p><strong><code>Internal</code></strong></p><p>Registered beforeRouteEnter callbacks passed to <code>next</code> or returned in guards</p><hr><h3 id="instances" tabindex="-1">instances <a class="header-anchor" href="#instances" aria-label="Permalink to &quot;instances&quot;">​</a></h3><blockquote><p><strong>instances</strong>: <code>Record</code>&lt;<code>string</code>, <code>undefined</code> | <code>null</code> | <code>ComponentPublicInstance</code>&gt;</p></blockquote><p>Mounted route component instances Having the instances on the record mean beforeRouteUpdate and beforeRouteLeave guards can only be invoked with the latest mounted app instance if there are multiple application instances rendering the same view, basically duplicating the content on the page, which shouldn&#39;t happen in practice. It will work if multiple apps are rendering different named views.</p><hr><h3 id="leaveGuards" tabindex="-1">leaveGuards <a class="header-anchor" href="#leaveGuards" aria-label="Permalink to &quot;leaveGuards&quot;">​</a></h3><blockquote><p><strong>leaveGuards</strong>: <code>Set</code>&lt;<a href="./NavigationGuard.html"><code>NavigationGuard</code></a>&gt;</p></blockquote><p><strong><code>Internal</code></strong></p><p>Registered leave guards</p><hr><h3 id="meta" tabindex="-1">meta <a class="header-anchor" href="#meta" aria-label="Permalink to &quot;meta&quot;">​</a></h3><blockquote><p><strong>meta</strong>: <a href="./RouteMeta.html"><code>RouteMeta</code></a></p></blockquote><p>Arbitrary data attached to the record.</p><hr><h3 id="mods" tabindex="-1">mods <a class="header-anchor" href="#mods" aria-label="Permalink to &quot;mods&quot;">​</a></h3><blockquote><p><strong>mods</strong>: <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p></blockquote><p><strong><code>Internal</code></strong></p><p>Contains the original modules for lazy loaded components.</p><hr><h3 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h3><blockquote><p><strong>name</strong>: <a href="./../type-aliases/RouteRecordNameGeneric.html"><code>RouteRecordNameGeneric</code></a></p></blockquote><p>Name for the route record. Must be unique.</p><hr><h3 id="path" tabindex="-1">path <a class="header-anchor" href="#path" aria-label="Permalink to &quot;path&quot;">​</a></h3><blockquote><p><strong>path</strong>: <code>string</code></p></blockquote><p>Path of the record. Should start with <code>/</code> unless the record is the child of another record.</p><hr><h3 id="props" tabindex="-1">props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;props&quot;">​</a></h3><blockquote><p><strong>props</strong>: <code>Record</code>&lt;<code>string</code>, <a href="./../type-aliases/RouteRecordProps.html"><code>_RouteRecordProps</code></a>&gt;</p></blockquote><p>Allow passing down params as props to the component rendered by <code>router-view</code>. Should be an object with the same keys as <code>components</code> or a boolean to be applied to every component.</p><hr><h3 id="redirect" tabindex="-1">redirect <a class="header-anchor" href="#redirect" aria-label="Permalink to &quot;redirect&quot;">​</a></h3><blockquote><p><strong>redirect</strong>: <code>undefined</code> | <a href="./../type-aliases/RouteRecordRedirectOption.html"><code>RouteRecordRedirectOption</code></a></p></blockquote><p>Where to redirect if the route is directly matched. The redirection happens before any navigation guard and triggers a new navigation with the new target location.</p><hr><h3 id="updateGuards" tabindex="-1">updateGuards <a class="header-anchor" href="#updateGuards" aria-label="Permalink to &quot;updateGuards&quot;">​</a></h3><blockquote><p><strong>updateGuards</strong>: <code>Set</code>&lt;<a href="./NavigationGuard.html"><code>NavigationGuard</code></a>&gt;</p></blockquote><p><strong><code>Internal</code></strong></p><p>Registered update guards</p>',67)]))}const m=o(d,[["render",n]]);export{p as __pageData,m as default};
