import{_ as l,c as p,j as i,a as h,G as a,a2 as k,B as e,o as r}from"./chunks/framework.XosO8Wyc.js";const m=JSON.parse('{"title":"Named Views","description":"","frontmatter":{},"headers":[],"relativePath":"guide/essentials/named-views.md","filePath":"guide/essentials/named-views.md"}'),d={name:"guide/essentials/named-views.md"};function o(g,s,B,c,y,E){const n=e("VueSchoolLink"),t=e("RuleKitLink");return r(),p("div",null,[s[0]||(s[0]=i("h1",{id:"Named-Views",tabindex:"-1"},[h("Named Views "),i("a",{class:"header-anchor",href:"#Named-Views","aria-label":'Permalink to "Named Views"'},"​")],-1)),a(n,{href:"https://vueschool.io/lessons/vue-router-4-named-views",title:"Learn how to use named views"}),s[1]||(s[1]=k(`<p>Sometimes you need to display multiple views at the same time instead of nesting them, e.g. creating a layout with a <code>sidebar</code> view and a <code>main</code> view. This is where named views come in handy. Instead of having one single outlet in your view, you can have multiple and give each of them a name. A <code>router-view</code> without a name will be given <code>default</code> as its name.</p><div class="language-template vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki shiki-themes one-dark-pro github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#22863A;">router-view</span><span style="--shiki-dark:#D19A66;--shiki-light:#6F42C1;"> class</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">=</span><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">&quot;view left-sidebar&quot;</span><span style="--shiki-dark:#D19A66;--shiki-light:#6F42C1;"> name</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">=</span><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">&quot;LeftSidebar&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;"> /&gt;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#22863A;">router-view</span><span style="--shiki-dark:#D19A66;--shiki-light:#6F42C1;"> class</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">=</span><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">&quot;view main-content&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;"> /&gt;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#22863A;">router-view</span><span style="--shiki-dark:#D19A66;--shiki-light:#6F42C1;"> class</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">=</span><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">&quot;view right-sidebar&quot;</span><span style="--shiki-dark:#D19A66;--shiki-light:#6F42C1;"> name</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">=</span><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">&quot;RightSidebar&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;"> /&gt;</span></span></code></pre></div><p>A view is rendered by using a component, therefore multiple views require multiple components for the same route. Make sure to use the <code>components</code> (with an <strong>s</strong>) option:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#D73A49;">const</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;"> router</span><span style="--shiki-dark:#56B6C2;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#61AFEF;--shiki-light:#6F42C1;"> createRouter</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">  history</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#61AFEF;--shiki-light:#6F42C1;">createWebHashHistory</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">(),</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">  routes</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">: [</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">    {</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">      path</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">&#39;/&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">      components</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">: {</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">        default</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">Home</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">        // short for LeftSidebar: LeftSidebar</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">        LeftSidebar</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">        // they match the \`name\` attribute on \`&lt;router-view&gt;\`</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">        RightSidebar</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">      },</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">    },</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">  ],</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">})</span></span></code></pre></div><p>A working demo of this example can be found <a href="https://codesandbox.io/s/named-views-vue-router-4-examples-rd20l" target="_blank" rel="noreferrer">here</a>.</p><h2 id="Nested-Named-Views" tabindex="-1">Nested Named Views <a class="header-anchor" href="#Nested-Named-Views" aria-label="Permalink to &quot;Nested Named Views&quot;">​</a></h2><p>It is possible to create complex layouts using named views with nested views. When doing so, you will also need to give nested <code>router-view</code> a name. Let&#39;s take a Settings panel example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes one-dark-pro github-light vp-code" tabindex="0"><code><span class="line"><span>/settings/emails                                       /settings/profile</span></span>
<span class="line"><span>+-----------------------------------+                  +------------------------------+</span></span>
<span class="line"><span>| UserSettings                      |                  | UserSettings                 |</span></span>
<span class="line"><span>| +-----+-------------------------+ |                  | +-----+--------------------+ |</span></span>
<span class="line"><span>| | Nav | UserEmailsSubscriptions | |  +------------&gt;  | | Nav | UserProfile        | |</span></span>
<span class="line"><span>| |     +-------------------------+ |                  | |     +--------------------+ |</span></span>
<span class="line"><span>| |     |                         | |                  | |     | UserProfilePreview | |</span></span>
<span class="line"><span>| +-----+-------------------------+ |                  | +-----+--------------------+ |</span></span>
<span class="line"><span>+-----------------------------------+                  +------------------------------+</span></span></code></pre></div><ul><li><code>Nav</code> is just a regular component</li><li><code>UserSettings</code> is the parent view component</li><li><code>UserEmailsSubscriptions</code>, <code>UserProfile</code>, <code>UserProfilePreview</code> are nested view components</li></ul><p><strong>Note</strong>: <em>Let&#39;s forget about how the HTML/CSS should look like to represent such layout and focus on the components used.</em></p><p>The <code>&lt;template&gt;</code> section for <code>UserSettings</code> component in the above layout would look something like this:</p><div class="language-template vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki shiki-themes one-dark-pro github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">&lt;!-- UserSettings.vue --&gt;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#22863A;">div</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&gt;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">  &lt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#22863A;">h1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&gt;User Settings&lt;/</span><span style="--shiki-dark:#E06C75;--shiki-light:#22863A;">h1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&gt;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">  &lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#005CC5;">NavBar</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;"> /&gt;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">  &lt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#22863A;">router-view</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;"> /&gt;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">  &lt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#22863A;">router-view</span><span style="--shiki-dark:#D19A66;--shiki-light:#6F42C1;"> name</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">=</span><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">&quot;helper&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;"> /&gt;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&lt;/</span><span style="--shiki-dark:#E06C75;--shiki-light:#22863A;">div</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">&gt;</span></span></code></pre></div><p>Then you can achieve the layout above with this route configuration:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">{</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#6F42C1;">  path</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">&#39;/settings&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">  // You could also have named views at the top</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#6F42C1;">  component</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">UserSettings</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#6F42C1;">  children</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">: [</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">    {</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">      path</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">&#39;emails&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">      component</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">UserEmailsSubscriptions</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">    },</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">    {</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">      path</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#98C379;--shiki-light:#032F62;">&#39;profile&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">      components</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">: {</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">        default</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">UserProfile</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">        helper</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#E06C75;--shiki-light:#24292E;">UserProfilePreview</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">      }</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">  ]</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">}</span></span></code></pre></div><p>A working demo of this example can be found <a href="https://codesandbox.io/s/nested-named-views-vue-router-4-examples-re9yl?&amp;initialpath=%2Fsettings%2Femails" target="_blank" rel="noreferrer">here</a>.</p>`,15)),a(t)])}const F=l(d,[["render",o]]);export{m as __pageData,F as default};
